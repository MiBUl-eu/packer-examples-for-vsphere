{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":""},{"location":"#packer-examples-for-vmware-vsphere","title":"Packer Examples for VMware vSphere","text":"<p>This repository provides a collection of opinionated examples that demonstrate how you can use both  HashiCorp Packer and the Packer Plugin for VMware vSphere (<code>vsphere-iso</code> builder) to automate the creation of virtual machine images for VMware vSphere environments.</p> <p>Whether you're a developer, systems administrator, or site reliability engineer, this project is designed to both help and inspire you in streamlining your infrastructure provisioning process and maintain consistency in your virtualization workflow.</p> <p>All examples are provided in the HashiCorp Configuration Language (\"HCL\").</p> <p>This project supports the following guest operating systems:</p>"},{"location":"#linux-distributions","title":"Linux Distributions","text":"Operating System Version VMTools Customization Cloud-Init Customization Network Variables Storage Variables  \u00a0\u00a0 VMware Photon OS 5.0 4.0  \u00a0\u00a0 Debian 12 11  \u00a0\u00a0 Ubuntu Server 23.10 22.04 LTS 20.04 LTS  \u00a0\u00a0 Red Hat Enterprise Linux 9 8 7  \u00a0\u00a0 AlmaLinux OS 9 8  \u00a0\u00a0 Rocky Linux 9 8  \u00a0\u00a0 Oracle Linux 9 8  \u00a0\u00a0 CentOS 9 Stream 8 Stream 7  \u00a0\u00a0 SUSE Linux Enterprise 15"},{"location":"#microsoft-windows","title":"Microsoft Windows","text":"Operating System Version Editions Experience  \u00a0\u00a0 Microsoft Windows Server 2025 Standard and Enterprise Core and Desktop 2022 Standard and Enterprise Core and Desktop 2019 Standard and Enterprise Core and Desktop  \u00a0\u00a0 Microsoft Windows 11 Professional and Enterprise - 10 Professional and Enterprise -"},{"location":"license/","title":"License","text":"<p>Copyright 2023-2024 Broadcom. All Rights Reserved.</p> <p>The BSD-2 license (the \"License\") set forth below applies to all parts of the project.  You may not use this file except in compliance with the License.</p> <p>BSD-2 License</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p> <p>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"release-notes/","title":"Release History","text":""},{"location":"release-notes/#v0190","title":"v0.19.0","text":"<p>Release Date: Unreleased</p> <p>Enhancement:</p> <ul> <li>Adds templates and unit tests for managing custom network and storage configurations for Linux   distributions. #473,   #805</li> <li>Adds additional configuration to install packages for Linux distributions.   #800</li> <li>Adds option to set a specified number of remaining CD-ROMs for a machine images added in   <code>packer-plugin-vsphere</code> v1.2.4.   #836</li> <li>Adds use of evaluation versions for Windows Server 2025, 2022, and 2019 images, by default. Keys   are still supported.   #844</li> <li>Adds use of evaluation versions for Windows 11 and 10 images, by default. Keys are still   supported. #844</li> <li>Adds Windows Server 2025 Insiders Preview.   #834</li> <li>Adds Ansible integration for Windows Server 2025, 2022, and 2019 images.   #801</li> <li>Adds Ansible integration for Windows 11 and 10 images.   #801</li> <li>Adds option to enable a content library to source all guest operating system ISOs or use a   datastore path. Defaults to <code>false</code>, disabled. Set <code>common_iso_content_library_enabled</code> to <code>true</code>   to enable use of a content library for all guest operating system ISOs.</li> <li>Adds option to enable a content library for the placement of virtual machine images builds.   Defaults to <code>true</code>, enabled. Set <code>common_content_library_enabled</code> to <code>false</code> to disable use of a   content library for saving virtual machine image builds.</li> </ul> <p>Refactor:</p> <ul> <li>Refactors the Ubuntu builds not to use cloud-init, by default.   ## Set   <code>vm_guest_os_cloudinit</code> to <code>true</code> to enable cloud-init on the machine image.</li> </ul> <p>Chore:</p> <ul> <li>Updates <code>required_versions</code> for <code>packer</code> to <code>&gt;= 1.10.0</code>.   #828</li> <li>Updates <code>required_plugins</code> for <code>packer-plugin-vsphere</code> to <code>&gt;= 1.2.7</code>.   #824,   #871,   #873</li> <li>Updates <code>required_plugins</code> for <code>ethanmdavidson/packer-plugin-git</code> to <code>&gt;= 0.6.2</code>.   #868</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.7.1</code>.   #829</li> <li>Updates <code>required_versions</code> for <code>hashicorp/vsphere</code> to <code>&gt;= 2.7.0</code>.   #866</li> <li>Updates <code>required_versions</code> for <code>hashicorp/hcp</code> to <code>&gt;= 0.84.1</code>.   #867</li> <li>Updates Gomplate to <code>3.11.7</code>.   #825</li> <li>Updates Red Hat Enterprise Linux 9 to 9.3 release.   #819</li> <li>Updates Red Hat Enterprise Linux 8 to 8.9 release.   #818</li> <li>Updates AlmaLinux 9 to 9.3 release.   #817</li> <li>Updates AlmaLinux 8 to 8.9 release.   #817</li> <li>Updates Rocky Linux 9 to 9.3 release.   #823</li> <li>Updates Rocky Linux 8 to 8.9 release.   #822</li> <li>Updates Oracle Linux 9 to 9.3 release.   #821</li> <li>Updates Oracle Linux 8 to 8.9 release.   #820</li> <li>Updates Debian 12 to 12.5 release.   #865</li> <li>Updates Debian 11 to 11.9 release.   #864</li> <li>Updates Ubuntu 22.04 to 22.04.4 release.   #863</li> <li>Updates AlmaLinux to upgrade the <code>almalinux-release</code> package during the build.   #</li> </ul>"},{"location":"release-notes/#v0180","title":"v0.18.0","text":"<p>Release Date: 2023-11-28</p> <p>Enhancement:</p> <ul> <li>Adds Ubuntu Server 23.10 to the project.   #769</li> <li>Adds support for setting additional options. (<code>vsphere_resource_pool</code>,   <code>set_host_for_datastore_uploads</code>, and <code>ip_settle_timeout</code>).   #771</li> </ul> <p>Chore:</p> <ul> <li>Updates <code>ansible/ansible.cfg</code> to use <code>scp_extra_args = \"-O\"</code> by default. See the Ansible   documentation.   #767</li> <li>Removes unused files from <code>ansible/</code>.   #768</li> <li>Removes redundant Ansible task for users.   #770</li> </ul>"},{"location":"release-notes/#v0170","title":"v0.17.0","text":"<p>Release Date: 2023-10-23</p> <p>Enhancement:</p> <ul> <li>Adds VMware Photon OS 5.0 to the project.   #582</li> <li>Adds Debian 12 to the project.   #584</li> <li>Adds Oracle Linux 9 to the project.   #670</li> <li>Adds Oracle Linux 8 to the project.   #670</li> <li>Adds Windows 11 Enterprise to the project.   #688</li> <li>Adds Windows 10 Enterprise to the project.   #688</li> <li>Adds the option to configure the following target for builds:   #471</li> <li>a vSphere cluster with Distributed Resource Scheduling enabled. (Default)</li> <li>an ESXi host in vSphere cluster with Distributed Resource Scheduling disabled. (Override)</li> <li>an ESXi host not in a vSphere cluster. (Override)</li> <li>Adds a development container for Visual Studio Code.   #700</li> <li>Adds an example <code>.gitlab.yml</code> file for GitLab CI/CD.   #675</li> <li>Adds a <code>build-ci.tmpl</code> that can be used to create or update the <code>.gitlab-ci.yml</code> file using   gomplate. #675</li> <li>Adds Packer logging settings to <code>set-envvars.sh</code>.   #705</li> <li>Adds a debug option (<code>--debug</code> or <code>-d</code>) to<code>./build.sh</code> to enable debug logging for Packer.   #706</li> </ul> <p>Bugfix:</p> <ul> <li>Updates Debian 11 to include <code>build_password</code> in the <code>linux-debian.pkr.hcl</code> configuration file.   #653</li> <li>Updates Debian 11 to ensure <code>/dev/sr1</code> is not mounted with use of the default <code>http</code> data source.   No changes to the <code>disk</code> data source.   #686</li> </ul> <p>Chore:</p> <ul> <li>Updates <code>required_versions</code> for <code>packer</code> to <code>&gt;= 1.9.4</code>.   #718</li> <li>Updates <code>required_plugins</code> for <code>packer-plugin-vsphere</code> to <code>&gt;= 1.2.1</code>.   #564</li> <li>Updates <code>required_plugins</code> for <code>ethanmdavidson/packer-plugin-git</code> to <code>&gt;= 0.4.3</code>.   #717</li> <li>Updates <code>required_plugins</code> for <code>rgl/packer-plugin-windows-update</code> to <code>&gt;= 0.14.3</code>.   #565</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.6.0</code>.   #757</li> <li>Updates <code>required_versions</code> for <code>hashicorp/vsphere</code> to <code>&gt;= 2.5.1</code>.   #758</li> <li>Updates Gomplate to <code>3.11.5</code>.   #559</li> <li>Updates ansible-core to <code>2.15</code>.   #573</li> <li>Updates Debian 11 to 11.8 release.   #738</li> <li>Updates Ubuntu 22.04 to 22.04.3 release.   #720</li> <li>Updates Ubuntu 20.04 to 20.04.6 release.   #566</li> <li> <p>Removes Ubuntu 18.04 from the project.   #578</p> <p>On 31 May 2023, Ubuntu 18.04 LTS reached the end of standard support. See Ubuntu Lifecycle for more information.</p> </li> <li> <p>Updates Red Hat Enterprise Linux 9 to 9.2 release.   #576,   #587</p> </li> <li>Updates Red Hat Enterprise Linux 8 to 8.8 release.   #577</li> <li>Updates Almalinux 9 to 9.2 release.   #569</li> <li>Updates Almalinux 8 to 8.8 release.   #570</li> <li>Updates Rocky Linux 9 to 9.2 release.   #571</li> <li>Updates Rocky Linux 8 to 8.8 release.   #572</li> <li>Updates CentOS Stream 9 to latest June 2023 release.   #567</li> <li>Updates CentOS Stream 8 to latest June 2023 release.   #568</li> <li>Updates SLES 15 to 15.5 release.   #740</li> <li>Updates Windows Server 2022 to October 2023 (US English) release.   #744</li> <li>Updates Windows 11 22H2 to October 2023 (US English) release.   #743</li> <li>Updates Windows 10 22H2 to October 2023 (US English) release.   #742</li> </ul> <p>Refactor:</p> <ul> <li>Removes the use of <code>iso_checksum</code> and <code>iso_checksum_type</code> as they are not needed since the ISOs   are not being downloaded by the plugin and are expected to be present and already verified by the   user after download.   #722</li> <li>Removes the installation of Chocolatey from the Microsoft Windows guest operating system builds.   #586</li> </ul>"},{"location":"release-notes/#v0160","title":"v0.16.0","text":"<p>Release Date: 2023-01-17</p> <p>Enhancement:</p> <ul> <li>Adds support for disabling password expiration for the local administrator account on localized   (non-English) Windows guest operating systems.   #334.</li> <li>Adds support for enabling Remote Desktop on localized (non-English) Windows guest operating   systems. #335.</li> <li>Adds support to allow SSH authentication with RSA keys for Ansible, if necessary. Adds a note   related to OpenSSH &gt;= 9.0 in the documentation.   #387.</li> </ul> <p>Bugfix:</p> <ul> <li>Fixes missing privileges for the custom role in vSphere that effected the ability to build using   disk-based deployment modes and Windows 11 22H2 with vTPM.   #295,   #339,   #340</li> <li>Updates the URI in <code>user-data.pkrtpl.hcl</code> for Ubuntu 20.04 and 22.04 to remove the country code.   This will help to ensure that GeoIP lookup works for all users.   #421</li> <li>Updates the install commands for Red Hat Enterprise Linux 9 to use the correct EPEL repository   version. #440</li> </ul> <p>Documentation:</p> <ul> <li>Updates options to download a release or clone the project.   #385</li> <li>Updates syntax to append RSA algorithm to <code>HostKeyAlgorithms +ssh-rsa</code>   and<code>PubKeyAcceptedAlgorithms +ssh-rsa</code>.   #386</li> <li>Updates the ssh-keygen example for generating the ECDSA public key to use a 521 bit key length.   Valid key lengths are 256, 384, or 521.   #439</li> </ul> <p>Refactor:</p> <ul> <li>Refactors builds to use the current Git branch / tag as the <code>build_version</code> local variable used   for virtual machine image names and descriptions.   #385</li> <li>Refactors Ansible roles to remove the <code>warn: false</code> args for ansible-core 2.14 compatibility.   #443</li> </ul> <p>Chore:</p> <ul> <li>Updates <code>required_versions</code> for <code>packer</code> to <code>&gt;= 1.8.5</code>.   #423</li> <li>Updates <code>required_plugins</code> for <code>packer-plugin-vsphere</code> to <code>&gt;= 1.1.1</code>.   #416</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.3.7</code>.   #456</li> <li>Updates <code>required_versions</code> for <code>hashicorp/hcp</code> to <code>&gt;= 0.51.0</code>.   #408,   #409,   #410,   #411,   #412,   #413,   #414,   #415</li> <li>Updates Gomplate to <code>3.11.3</code>.   #380,   #382</li> <li>Updates Debian 11 to 11.6 release.   #432</li> <li>Updates Red Hat Enterprise Linux 9 to 9.1 release.   #366</li> <li>Updates Red Hat Enterprise Linux 8 to 8.7 release.   #365</li> <li>Updates Rocky Linux 9 to 9.1 release.   #381</li> <li>Updates Rocky Linux 8 to 8.7 release.   #368</li> <li>Updates Almalinux 9 to 9.1 release.   #362</li> <li>Updates Almalinux 8 to 8.7 release.   #361</li> <li>Updates CentOS Stream 9 to latest December 2022 release.   #454</li> <li>Updates CentOS Stream 8 to latest December 2022 release.   #453</li> <li>Updates Windows Server 2022 to December 2022 (US English) release.   #452</li> <li>Updates Windows Server 2019 to November 2022 (US English) release.   #373</li> <li>Updates Windows 11 22H2 to December 2022 (US English) release.   #451</li> <li>Updates Windows 10 22H2 to December 2022 (US English) release.   #450</li> <li>Removes Ubuntu 20.04 LTS (<code>x86_64</code>) and macOS</li> <li>Big Sur (Intel) as tested operating systems for the   Packer host. #393</li> </ul> <p>Breaking Change:</p> <ul> <li>Removes support to use the <code>iso_url</code> variable to download the guest operating system <code>.iso</code> from a   URL introduced in #249   due to #343.   #435</li> </ul>"},{"location":"release-notes/#v0150","title":"v0.15.0","text":"<p>Release Date: 2022-09-28</p> <p>Enhancement:</p> <ul> <li>Adds support for disk-based deployment mode for Debian 11.   #272.</li> <li>Adds support for disk-based deployment mode for SLES 15.   #276</li> </ul> <p>Bugfix:</p> <ul> <li>Fixes mismatches in source names for Windows Server when only builds for Standard or Datacenter   are launched using <code>./build.sh</code>.   #281</li> </ul> <p>Chore:</p> <ul> <li>Updates Debian 11 to 11.5.0 release.   #273</li> <li>Updates Ubuntu 22.04 to 22.04.1 release.   #274</li> <li>Updates Ubuntu 20.04 to 20.04.5 release.   #275</li> <li>Updates SLES 15 to 15.4 release.   #287</li> <li>Updates Windows Server 2022 to September 2022 (US English) release.   #282</li> <li>Updates Windows 11 to 22H2 September 2022 (US English) release.   #284</li> <li>Updates Windows 10 to 21H2 September 2022 (US English) release.   #283</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.3.1</code>.   #292</li> </ul>"},{"location":"release-notes/#v0140","title":"v0.14.0","text":"<p>Release Date: 2022-08-25</p> <p>Enhancement:</p> <ul> <li>Adds Debian 11. #195</li> <li>Adds support for initial configuration and use of the HCP Packer Registry.   #236 and   #256</li> <li>Adds support to use the <code>iso_url</code> variable to download the guest operating system <code>.iso</code> from a   URL. #249</li> </ul> <p>Breaking Change:</p> <ul> <li>Updates <code>vm_cpu_sockets</code> to <code>vm_cpu_count</code> for CPUs. The value of the sockets is determined by   dividing the number of CPUs by the number of cores per socket defined.   #253</li> </ul> <p>Chore:</p> <ul> <li>Updates <code>required_versions</code> for <code>packer</code> to <code>&gt;= 1.8.3</code>.</li> <li>Updates <code>required_plugins</code> for <code>packer-plugin-vsphere</code> to <code>&gt;= 1.0.8</code>.</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.2.8</code>.</li> <li>Updates Windows Server 2022 to August 2022 (US English) release.</li> <li>Updates Windows 11 to August 2022 (US English) release.</li> <li>Updates Windows 10 to August 2022 (US English) release.</li> </ul> <p>Note</p> <ul> <li>HTTP-based deployment only.</li> </ul>"},{"location":"release-notes/#v0130","title":"v0.13.0","text":"<p>Release Date: 2022-07-26</p> <p>Enhancement:</p> <ul> <li>Adds Red Hat Enterprise Linux 9.</li> <li>Adds CentOS 9 Stream.</li> <li>Adds Rocky Linux 9.</li> <li>Adds AlmaLinux OS 9.</li> <li>Adds SUSE Linux Enterprise Server 15.   #227.</li> <li>Adds option for setting the number of video displays and the size for the video memory for both   Windows 11 and 10, which is useful for virtual desktop use cases (e.g., Horizon). The ability to   set the number of displays was added in <code>v1.0.6</code> of <code>packer-plugin-vsphere</code>.</li> <li>Adds a common option to export machine image artifacts (<code>.ovf</code>,<code>.vmdk</code>, and <code>.mf</code>) to an output   path.</li> <li>Removes the default requirement for a trusted root authority certificate to be imported and   trusted by each machine image build. This will allow project users to get started more quickly   without a pre-requisite.</li> </ul> <p>Refactor:</p> <ul> <li>Refactors builds to use local variables for virtual machine image names and descriptions.</li> <li>Refactors builds to use local variables for ISO paths and checksums.</li> <li>Refactors builds to use local variables for manifest data and output path.</li> </ul> <p>Chore:</p> <ul> <li>Updates vSphere to version 7.0.3D or higher to address a   known issue with the Red Hat Enterprise Linux 9 with EFI   firmware.</li> <li>Updates <code>required_plugins</code> for <code>packer-plugin-vsphere</code> to <code>&gt;= 1.0.6</code>.</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.2.5</code>.</li> <li>Updates Rocky Linux 8 to use <code>other4xLinuxGuest64</code>.</li> <li>Updates Almalinux 8 to use <code>other4xLinuxGuest64</code>.</li> <li>Removes the deprecated CentOS 8 option; end-of-life as of December 31, 2021.</li> <li>Removes the deprecated Windows Server 2016 option; end-of-life as of January 11, 2022.</li> </ul> <p>Note</p> <ul> <li>Supports 15.3 / 15 Service Pack 3.</li> <li>HTTP-based deployment only. Disk-based deployment planned.</li> </ul>"},{"location":"release-notes/#v0120","title":"v0.12.0","text":"<p>Release Date: 2022-06-27</p> <p>Chore:</p> <ul> <li>Updates <code>required_versions</code> for <code>packer</code> to <code>&gt;= 1.8.2</code>.</li> <li>Updates <code>required_plugins</code> for <code>packer-plugin-vsphere</code> to <code>&gt;= 1.0.5</code>.</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.2.3</code>.</li> <li>Updates <code>required_versions</code> for <code>hashicorp/vsphere</code> to <code>&gt;= 2.2.0</code>.</li> <li>Updates vSphere to version 7.0.3 or higher.</li> <li>Updates Windows Server 2022 to June 2022 (US English) release.</li> <li>Updates Windows 11 to June 2022 (US English) release.</li> <li>Updates <code>vm_guest_os_type</code> for Windows Server 2022 guest ID to <code>windows2019srvNext_64Guest</code>.</li> </ul>"},{"location":"release-notes/#v0110","title":"v0.11.0","text":"<p>Release Date: 2022-05-31</p> <p>Chore:</p> <ul> <li>Updates <code>required_plugins</code> for <code>packer-plugin-vsphere</code> to <code>&gt;= 1.0.4</code>.</li> <li>Updates <code>required_plugins</code> and <code>packer-plugin-windows-update</code> to <code>&gt;= 0.14.1</code>.</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.2.1</code>.</li> <li>Updates Red Hat Enterprise Linux 8 to 8.6 release.</li> <li>Updates Rocky Linux 8 to 8.6 release.</li> <li>Updates Almalinux 8 to 8.6 release.</li> <li>Updates CentOS Stream 8 checksum to latest release.</li> <li>Updates Windows Server 2022 to April 2022 (US English) release.</li> <li>Updates Windows 11 to May 2022 (US English) release.</li> <li>Updates requirements to include VMware Photon OS 4 as a tested operating system.</li> <li>Updates requirements to include Ubuntu 22.04 as a tested operating system.</li> </ul>"},{"location":"release-notes/#v0100","title":"v0.10.0","text":"<p>Release Date: 2022-04-28</p> <p>Enhancement:</p> <ul> <li>Adds Ubuntu Server 22.04 LTS (#185)</li> <li>Adds an option to generate a custom build script. (#188)</li> </ul> <p>\ud83d\udc1e Bugfix:</p> <ul> <li>Updates the Python interpreter for Ansible on AlmaLinux to use <code>/usr/libexec/platform-python</code>.   (#182)</li> <li>Adds the use of <code>build_password</code> to the Linux distributions to ensure use of <code>set-envvars.sh</code>   works as expected. (#197)</li> <li>Updates the SHA256 checksum for the CentOS 7 .iso <code>CentOS-7-x86_64-DVD-2009.iso</code>. (#201)</li> </ul> <p>Chore:</p> <ul> <li>Updates the Windows Server 2022 February 2022 (US English) release. (#192)</li> <li>Updates the Ubuntu 20.04 LTS to 20.04.4 release. (#184)</li> </ul>"},{"location":"release-notes/#v090","title":"v0.9.0","text":"<p>Release Date: 2022-03-17</p> <p>Chore:</p> <ul> <li>Updates <code>required_versions</code> for <code>packer</code> to <code>&gt;= 1.8.0</code>.</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.1.7</code>.</li> <li>Updates <code>required_versions</code> for <code>hashicorp/vsphere</code> to <code>&gt;= 2.1.1</code>.</li> </ul>"},{"location":"release-notes/#v080","title":"v0.8.0","text":"<p>Release Date: 2022-02-22</p> <p>Enhancement:</p> <ul> <li>Updates the configuration of Linux machine images to use the Ansible roles instead of shell   scripts.</li> </ul> <p>Chore:</p> <ul> <li>Updates <code>required_versions</code> for <code>packer</code> to <code>&gt;= 1.7.10</code>.</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.1.5</code>.</li> </ul>"},{"location":"release-notes/#v070","title":"v0.7.0","text":"<p>Release Date: 2022-01-21</p> <p>Enhancement:</p> <ul> <li>Updates the <code>notes</code> to automatically include the Packer version and a <code>build_version</code>.</li> <li>Updates the naming for the machine image output and includes a <code>build_version</code> (e.g.,   <code>linux-photon-4-v22.01</code>).</li> <li>Updates all Microsoft Windows Server machine image builds to a default of 4096 MB of memory to   increase performance during operating system patching.</li> </ul> <p>Chore:</p> <ul> <li>Updates the structure of the subdirectories in <code>builds/</code>.</li> <li>Updates <code>required_versions</code> for <code>packer</code> to <code>&gt;= 1.7.9</code>.</li> <li>Updates <code>required_plugins</code> for <code>packer-plugin-vsphere</code> to <code>&gt;= 1.0.3</code>.</li> <li>Updates <code>required_versions</code> for <code>terraform</code> to <code>&gt;= 1.1.4</code>.</li> <li>Updates Microsoft Windows 11 Professional to use virtual trusted platform module (vTPM) and   removes experimental project support. vTPM is now supported by <code>packer-plugin-vsphere</code> to   <code>&gt;= 1.0.3</code>.</li> <li>Updates VMware Photon OS 4.0 to   Revision 2.</li> <li>Adds configurable data source provisioning for VMware Photon OS 4.0. Revision 2 adds support for   secondary devices with kickstart. Edit the <code>common_data_source</code> in <code>common.pkvars.hcl</code> from <code>http</code>   to <code>disk</code>. The build will attach an on-demand <code>.iso</code> as the secondary CD-ROM for the kickstart.   This is useful for environments that can not use HTTP-based kickstart.</li> <li>Adds a GitHub Action on pull requests to check code quality using linters.</li> <li>Updates all of project code to address issues found by the linter(s).</li> </ul>"},{"location":"release-notes/#v060","title":"v0.6.0","text":"<p>Release Date: 2021-11-09</p> <p>Enhancement:</p> <ul> <li>Adds support for <code>cloud-init</code> and the <code>[VMware]</code> data source introduced in cloud-init v21.3 for   Ubuntu Server 20.04 LTS</li> </ul> <p>Important Note: Uncomment these lines in the script for Ubuntu 20.04 and guest customization   will be performed by VMware Tools vs. <code>cloud-init</code>.</p> <pre><code># Uncomment below if guest customization will be performed by VMware Tools.\n# touch /etc/cloud/cloud.cfg.d/99.disable-network-config.cfg\n# echo \"network: {config: disabled}\" &gt;&gt; /etc/cloud/cloud.cfg.d/99.disable-network-config.cfg\n</code></pre> <ul> <li>Adds custom disk partitioning for Ubuntu Server 20.04 LTS and Ubuntu Server 18.04 LTS</li> <li>Updates Ubuntu 18.04 LTS to <code>efi-secure</code>.</li> <li>Updates all certificates to the PEM-encoded <code>.cer</code> format.</li> <li>Adds example Terraform plans for deployment testing.</li> <li>Adds an Ansible playbook example to create a custom role in vSphere for Packer.</li> </ul>"},{"location":"release-notes/#v051","title":"v0.5.1","text":"<p>Release Date: 2021-10-20</p> <ul> <li>Updates <code>LICENSE</code> and <code>NOTICE</code> to BSD-2.</li> <li>Updates <code>required_versions</code> for <code>packer</code> to <code>&gt;= 1.7.7</code>.</li> <li>Updates <code>required_plugins</code> for <code>packer-plugin-vsphere</code> to <code>&gt;= 1.0.2</code>.</li> <li>Updates Linux distributions to generate new host keys on first-boot.</li> <li>Adds option to use<code>floppy_content</code> included in <code>packer-plugin-vsphere</code> release<code>v1.0.2</code>. Ubuntu   Server 18.04 LTS will toggle to use <code>floppy_content</code> from <code>http_content</code> when   <code>common_data_source = \"disk\"</code> is enabled.</li> <li>Updates VMware Photon OS 4.0 to Revision 1.</li> <li>Adds Microsoft Windows 11 Professional as experimental until <code>vsphere-iso</code> supports vTPM.</li> <li>Adds support for <code>skip_import</code> Adds to <code>packer-plugin-vsphere</code> in <code>v1.0.2</code>. When set to <code>true</code> the   virtual machine will not be imported into the content library. This is useful for   testing/debugging. Defaults to false.</li> </ul>"},{"location":"release-notes/#v050","title":"v0.5.0","text":"<p>Release Date: 2021-10-11</p> <ul> <li>Adds the <code>config.sh</code> to create <code>config/*.prkvars.hcl</code> (default) files from the examples in   <code>builds/</code>.</li> <li>Adds the option for create &gt;1 set of configuration set by passing an argument to <code>config.sh</code>   (e.g. <code>config.sh config/us-west-1</code>) and the pass the configuration set to <code>build.sh</code> (e.g. <code>build.sh config/us-west-1</code>).</li> <li>Use of the content library is now optional by updating the <code>config/common.pkvars.hcl</code> settings to   the following:</li> </ul> <pre><code>common_template_conversion     = true\ncommon_content_library    = null\ncommon_content_library_ovf     = false\ncommon_content_library_destroy = false\n</code></pre> <ul> <li>Adds support for a SOCKS proxy by editing <code>config/proxy.pkvars.hcl</code>.</li> <li>Adds the ability to set the IP address to bind the HTTP server by editing the <code>common_http_ip</code> in   <code>config/common.pkvars.hcl</code> from <code>null</code> to an IP address on the Packer host:</li> </ul> <pre><code>common_http_ip = \"172.16.11.100\"\n</code></pre> <ul> <li>Add configurable data source provisioning for Linux images. By default, HTTP is used for the   kickstart. By editing the <code>common_data_source</code> in <code>config/common.pkvars.hcl</code> from <code>http</code> to <code>disk</code>   the build will use a disk-based method, such as a <code>.iso</code> as the secondary CD-ROM. This is useful   for environments that can not communicate back to the Packer host's HTTP server.</li> </ul> <pre><code>common_data_source = \"disk\"\n</code></pre> <ul> <li>Renames all certificates to <code>*.ctr.example</code> and <code>*.pb7.example</code>. Please add your own custom   certificates to the directories per the README.md.</li> <li>Adds the ability for Packer to be run from any directory by including the use of <code>$(path.cwd)/</code>.</li> <li>Adds the <code>ansible</code> provisioner to Linux builds for base configuration using roles. More updates to   follow.</li> <li>Adds information on least privilege service account using a custom role in vSphere.</li> <li>Adds a Terraform example for creation of the custom role in vSphere.</li> <li>Updates <code>manifests</code> to use <code>manifests/</code> and a JSON output based on the timestamp.</li> <li>Updates <code>manifests</code> to use include relevant data in the JSON output for the build.</li> <li>Adds RHEL 7 and CentoOS 7 back to the builds per requests.</li> <li>Refactors RHEL and RHEL derivative kickstarts templates.</li> <li>Adds Windows 10 Professional.</li> <li>Updates PhotonOS to <code>efi-secure</code>.</li> <li>Updates Ubuntu 20.04 LTS to <code>efi-secure</code>.</li> <li>Adds vendor provided filename and checksums to the build examples.</li> <li>Updates CONTRIBUTING.md with the contributor workflow.</li> <li>Adds headers to various scripts and files, as needed.</li> <li>Add public keys and specific Terraform files to <code>.gitignore</code>.</li> <li>Updates issue templates to use forms.</li> <li>Various bugfixes and code cleanliness.</li> <li>Bumped Packer to <code>&gt;= 1.7.6</code>.</li> <li>Thanks to the new contributors: @sestegra, @metabsdm, and @gcblack!</li> </ul>"},{"location":"release-notes/#v041","title":"v0.4.1","text":"<p>Release Date: 2021-09-16</p> <ul> <li>Refactors issue templates to use GitHub custom issue forms.</li> <li>Refactors all builds to pass the language, keyboard, and timezone to the configuration files.</li> <li>Updates the Rocky Linux build to use UEFI; however without secure boot.</li> <li>Updates the defaults in <code>common.pkvars.hcl</code> to use hardware version 19, which provides the best   performance and latest features available in ESXi 7.0 U2.   if using a previous release</li> <li>Refactors all builds with input variable definitions separated into <code>variables.pkr.hcl</code>.</li> <li>Refactors all builds to use <code>&lt;build&gt;.auto.pkvars.hcl</code> for input variables the and   <code>&lt;build&gt;.pkr.hcl</code> for the template configurations, with simplified names for <code>&lt;build&gt;</code>.</li> <li>Refactors all builds to use <code>${path.cwd}/output/</code> as the path for the manifest post-processor.</li> <li>Adds disclaimers and Updates descriptions in script files.</li> <li>Updates README.md.</li> </ul>"},{"location":"release-notes/#v040","title":"v0.4.0","text":"<p>Release Date: 2021-09-07</p> <ul> <li>Adds support for Microsoft Windows Server 2022 machine image builds.</li> <li>Refactors configuration files to be generated using templates. Reduces the number of files and   passes variables into the <code>.pkrtpl.hcl</code> content.</li> <li>Refactors builds for Linux distributions to use <code>http_content</code> instead of <code>http_directory</code> and   <code>http_file</code>.</li> <li>Refactors builds for Microsoft Windows to use <code>cd_content</code> instead of <code>floppy_files</code>, which allows   for use generated configuration files. A Packer compatible <code>.iso</code> command-line tool is required.</li> <li>Adds disclaimers and Updates descriptions in script files.</li> <li>Adds NOTICE.</li> <li>Updates the <code>packer init</code> commands run in <code>build.sh</code>.</li> <li>Updates MAINTAINERS.md.</li> <li>Updates CONTRIBUTING.md.</li> <li>Updates README.md.</li> </ul>"},{"location":"release-notes/#v030","title":"v0.3.0","text":"<p>Release Date: 2021-08-18</p> <ul> <li>Moves <code>vsphere.pkrvars.hcl</code> and <code>rhsm.pkrvars.hcl</code> to the <code>builds</code> directory.</li> <li>Isolates variables to simplify updates to common settings with <code>builds/common.pkrvars.hcl</code>.</li> <li>Refactors all build definitions to use variables and reduce any hard-coded settings.</li> <li>All machine image build definitions use the the recommended firmware based on the guest operating   system and the minimum vSphere release supported by the repository. EFI Secure Boot is enabled for   Red Hat Enterprise Linux 8, CentoOS Linux/Stream 8, AlmaLinux 8, and Microsoft Windows Server   2019/2016. BIOS is enabled Rocky Linux 8.</li> <li>Adds the manifest post-provisioner to machine image build definitions.</li> <li>Moves public keys to variables.</li> <li>Adds a user for Ansible to Linux machine images with authorized_keys. Uses   <code>builds/ansible.pkrvars.hcl</code>. Password is randomized.</li> <li>Updates the Packer block to all builds with <code>required_versions &gt;= \"1.7.4\"</code> for Packer.</li> <li>Adds the <code>required_plugins</code> to the Packer block for all builds to use the <code>vsphere</code> plugin   <code>version = \"&gt;= 1.0.1\"</code>.</li> <li>Updates the Packer block for Windows builds with <code>required_plugins</code> and <code>version = \"0.14.0\"</code> for   the Windows-Update plugin.</li> <li>All builds automatically run <code>packer init</code> to initialize required plugins before running a build   with <code>build.sh</code>.</li> <li>Updates Microsoft Windows <code>autounattend.xml</code> files to use the attached VMware Tools <code>.iso</code> for   PVSCSI driver.</li> <li>Simplified and reduced the script files used by provisioners.</li> <li>Patches the script for VNware Photon OS 4 due to an issue performing updates with <code>tdnf</code>.</li> <li>Patches the script for Ubuntu Server 20.04 LTS to remove cloud-init and remove all netplan   configurations before GuestOS customization.</li> <li>Removes support for VMware Photon OS 3 machine image builds.</li> <li>Removes support for Red Hat Enterprise Linux 7 machine image builds.</li> <li>Removes support for CentOS Linux 7 machine image builds.</li> <li>Deprecates CentOS Linux 8. Removing in a future update. The CentOS Project   has shifted focus from CentOS Linux to   CentOS Stream. CentOS Linux 8 EOL: <code>2021-12-31</code>.</li> <li>Deprecating Microsoft Windows Server 2016. Removing in a future update. Microsoft Windows Server   2016 EOL: <code>2022-01-22</code>.</li> <li>Adds MAINTAINERS.md.</li> <li>Updates README.md.</li> </ul>"},{"location":"release-notes/#v020","title":"v0.2.0","text":"<p>Release Date: 2021-07-21</p> <ul> <li>Adds support for VMware Photon OS 4.</li> <li>Adds support for   AlmaLinux 8.</li> <li>Adds support for   Rocky Linux 8.</li> <li>Adds support for   CentOS Stream 8.</li> <li>Updates to <code>&gt;=</code> vSphere 7.0 U2.</li> <li>Adds the Packer block to all builds with <code>required_versions &gt;= \"1.7.3\"</code> for Packer.</li> <li>Adds the Packer block for Windows builds with <code>required_plugins</code> and <code>version = \"0.12.0\"</code> for the   Windows-Update plugin.</li> </ul>"},{"location":"release-notes/#v010","title":"v0.1.0","text":"<p>Release Date: 2020-11-26</p> <ul> <li>Initial release.</li> </ul>"},{"location":"community/code-of-conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"community/code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in the project and our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"community/code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes, and learning from the   experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address, without their   explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a professional setting</li> </ul>"},{"location":"community/code-of-conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"community/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official email address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"community/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at opensource@broadcom. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"community/code-of-conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"community/code-of-conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"community/code-of-conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"community/code-of-conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"community/code-of-conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"community/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ and its translations.</p>"},{"location":"community/contributing/","title":"Contributing Guidelines","text":"<p>Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community.</p> <p>Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution.</p>"},{"location":"community/contributing/#reporting-bugs-and-suggesting-enhancements","title":"Reporting Bugs and Suggesting Enhancements","text":"<p>We welcome you to use the GitHub issues to report bugs or suggest enhancements.</p> <p>When filing an issue, please check existing open, or recently closed, issues to make sure someone else hasn't already reported.</p> <p>Please try to include as much information as you can using the issue fo. Details like these are incredibly useful:</p> <ul> <li>A reproducible test case or series of steps.</li> <li>Any modifications you've made relevant to the bug.</li> <li>Anything unusual about your environment or deployment.</li> </ul>"},{"location":"community/contributing/#contributing-via-pull-requests","title":"Contributing via Pull Requests","text":"<p>Contributions using pull requests are appreciated. Before sending us a pull request, please ensure that:</p> <ol> <li>You open a discussion to discuss any significant work with the maintainer(s).</li> <li>You open an issue and link your pull request to the issue for context.</li> <li>You are working against the latest source on the <code>develop</code> branch.</li> <li>You check existing open, and recently merged, pull requests to make sure someone else hasn't    already addressed the problem.</li> </ol> <p>To open a pull request, please:</p> <ol> <li>Fork the repository.</li> <li>Modify the source; please focus on the specific change you are contributing.</li> <li>Ensure local tests pass.</li> <li>Updated the documentation, if required.</li> <li>Commit to your fork using a clear commit messages. Please use Conventional Commits.</li> <li>Open a pull request, answering any default questions in the pull request.</li> <li>Pay attention to any automated failures reported in the pull request, and stay involved in the    conversation.</li> </ol> <p>GitHub provides additional document on forking a repository and creating a pull request.</p>"},{"location":"community/contributing/#contributor-flow","title":"Contributor Flow","text":"<p>This is a rough outline of the contributor workflow:</p> <ul> <li>Create a topic branch from where you want to base your work.</li> <li>Make commits of logical units.</li> <li>Make sure your commit messages are in the proper format</li> <li>Push your changes to the topic branch in your fork.</li> <li>Submit a pull request. If the pull request is a work in progress, please open as draft.</li> </ul> <p>Example:</p> <pre><code>git remote add upstream https://github.com/vmware-samples/packer-examples-for-vsphere.git\ngit checkout -b feat/foo develop\ngit commit -s -a\ngit push origin feat/foo\n</code></pre>"},{"location":"community/contributing/#staying-in-sync-with-upstream","title":"Staying In Sync With Upstream","text":"<p>When your branch gets out of sync with the <code>vmware-samples/develop</code> branch, use the following to update:</p> <pre><code>git checkout feat/foo\ngit fetch -a\ngit pull --rebase upstream develop\ngit push --force-with-lease origin feat/foo\n</code></pre>"},{"location":"community/contributing/#updating-pull-requests","title":"Updating Pull Requests","text":"<p>If your pull request fails to pass or needs changes based on code review, you'll most likely want to squash these changes into existing commits.</p> <p>If your pull request contains a single commit or your changes are related to the most recent commit, you can simply amend the commit.</p> <pre><code>git add .\ngit commit --amend\ngit push --force-with-lease origin feat/foo\n</code></pre> <p>If you need to squash changes into an earlier commit, you can use:</p> <pre><code>git add .\ngit commit --fixup &lt;commit&gt;\ngit rebase -i --autosquash develop\ngit push --force-with-lease origin feat/foo\n</code></pre> <p>Be sure to add a comment to the pull request indicating your new changes are ready to review, as GitHub does not generate a notification when you <code>git push</code>.</p>"},{"location":"community/contributing/#formatting-commit-messages","title":"Formatting Commit Messages","text":"<p>We follow the conventions on How to Write a Git Commit Message.</p> <p>Be sure to include any related GitHub issue references in the commit message.</p> <p>See the GitHub documentation for referencing issues and commits.</p>"},{"location":"community/contributing/#finding-contributions-to-work-on","title":"Finding Contributions to Work On","text":"<p>Looking at the existing issues is a great way to find something to contribute on. If you have an idea you'd like to discuss, open a discussion.</p>"},{"location":"community/contributing/#licensing","title":"Licensing","text":"<p>See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution.</p> <p>We may ask you to sign a Contributor License Agreement (CLA) for larger changes.</p>"},{"location":"community/support/","title":"Support","text":"<p>We welcome you to use the GitHub issues tracker to report bugs or suggest features and enhancements.</p> <p>When filing an issue, please check existing open, or recently closed, issues to make sure someone else hasn't already reported the issue.</p> <p>Please try to include as much information as you can. Details like these are incredibly useful:</p> <ul> <li>A reproducible test case or series of steps.</li> <li>Any modifications you've made relevant to the bug.</li> <li>Anything unusual about your environment or deployment.</li> </ul> <p>You can also start a discussion on the discussions area to ask questions or share ideas.</p>"},{"location":"getting-started/build/","title":"Build","text":""},{"location":"getting-started/build/#build-script-options","title":"Build Script Options","text":"<p>If you need help for script options, pass the <code>--help</code> or <code>-h</code> flag to the build script to display the help for the build script.</p> <pre><code>./build.sh --help\n</code></pre> <p>If you need to enable debugging, pass the <code>--debug</code> or <code>-d</code> flag to the build script to enable debug mode for Packer.</p> <p>This example will look for the configuration files in the <code>config</code> directory and enable debug mode for Packer.</p> <pre><code>./build.sh --debug\n</code></pre> <p>This example will look for the configuration files in the <code>us-west-1</code> directory and enable debug mode for Packer.</p> <pre><code>./build.sh --debug us-west-1\n</code></pre>"},{"location":"getting-started/build/#using-the-build-script","title":"Using the Build Script","text":""},{"location":"getting-started/build/#build-with-defaults","title":"Build with Defaults","text":"<p>Start a build by running the build script (<code>./build.sh</code>). The script presents a menu the which simply calls Packer and the respective build(s).</p> <p>This example will look for the configuration files in the <code>config</code> directory.</p> <pre><code>./build.sh\n</code></pre>"},{"location":"getting-started/build/#build-a-specific-configuration","title":"Build a Specific Configuration","text":"<p>This example will look for the configuration files in the <code>us-west-1</code> directory.</p> <pre><code>./build.sh us-west-1\n</code></pre>"},{"location":"getting-started/build/#generate-a-custom-build-script","title":"Generate a Custom Build Script","text":"<p>The build script (<code>./build.sh</code>) can be generated with Gomplate using a template (<code>./build.tmpl</code>) and a configuration file in YAML (<code>./build.yaml</code>).</p> <p>Generate a custom build script:</p> <pre><code>gomplate -c build.yaml -f build.tmpl -o build.sh\n</code></pre> <p>or</p> <pre><code>make update-build-script\n</code></pre>"},{"location":"getting-started/build/#build-directly-with-packer","title":"Build Directly with Packer","text":"<p>You can also start a build based on a specific source for some of the virtual machine images.</p> <p>For example, if you simply want to build a Microsoft Windows Server 2022 Standard Core, run the following:</p> <p>Initialize the plugins:</p> <pre><code>packer init builds/windows/server/2022/.\n</code></pre> <p>Build a specific machine image:</p> <pre><code>packer build -force on-error=ask \\\n    --only vsphere-iso.windows-server-standard-core \\\n    -var-file=\"config/build.pkrvars.hcl\" \\\n    -var-file=\"config/common.pkrvars.hcl\" \\\n    -var-file=\"config/vsphere.pkrvars.hcl\" \\\n    builds/windows/server/2022\n</code></pre> <p>\u279c packer validate \\ -var-file=\"config/ansible.pkrvars.hcl\" \\ -var-file=\"config/build.pkrvars.hcl\" \\ -var-file=\"config/common.pkrvars.hcl\" \\ -var-file=\"config/proxy.pkrvars.hcl\" \\ -var-file=\"config/vsphere.pkrvars.hcl\" \\ builds/linux/photon/5</p>"},{"location":"getting-started/build/#build-with-environmental-variables","title":"Build with Environmental Variables","text":"<p>You can set your environment variables if you would prefer not to save sensitive information in clear-text files.</p> <p>You can add these to environmental variables using the included <code>set-envvars.sh</code> script.</p> <pre><code>. ./set-envvars.sh\n</code></pre> Tip <p>You must run the script as source or the shorthand \"<code>.</code>\".</p> <p>???+ note \"Content Library\" By default, the machine image artifacts are transferred to a vSphere Content Library as an OVF template and the temporary machine image is destroyed. <sup>1</sup></p> <pre><code>If an item of the same name exists in the target content library, Packer will update the\nexisting item with the new version of OVF template.\n</code></pre> <ol> <li> <p>The Microsoft Windows 11 machine image uses a virtual trusted platform module (vTPM). Refer to the VMware vSphere product documentation for requirements and pre-requisites. The Microsoft Windows 11 machine image is not transferred to the content library by default. It is not supported to clone an encrypted virtual machine to the content library as an OVF Template. You can adjust the common content library settings to use VM Templates.\u00a0\u21a9</p> </li> </ol>"},{"location":"getting-started/configuration/","title":"Configuration","text":""},{"location":"getting-started/configuration/#example-variables","title":"Example Variables","text":"<p>The project includes example variables files that you can use as a starting point for your own configuration.</p> <p>The variables are defined in <code>.pkrvars.hcl</code> files.</p> <p>Run the config script <code>./config.sh</code> to copy the <code>.pkrvars.hcl.example</code> files to a <code>config</code> directory.</p> <pre><code>./config.sh\n./build.sh\n</code></pre> <p>The <code>config</code> folder is the default folder. You can override the default by passing an alternate value as the first argument.</p> <p>For example:</p> <p>San Francisco: <code>us-west-1</code></p> <pre><code>./config.sh us-west-1\n./build.sh us-west-1\n</code></pre> <p>Los Angeles: <code>us-west-2</code></p> <pre><code>./config.sh us-west-2\n./build.sh us-west-2\n</code></pre> <p>This is useful for the purposes of running machine image builds for different environment.</p>"},{"location":"getting-started/configuration/#configuration-variables","title":"Configuration Variables","text":""},{"location":"getting-started/configuration/#build","title":"Build","text":"<p>Edit the <code>config/build.pkrvars.hcl</code> file to configure the credentials for the default account on machine images.</p> config/build.pkrvars.hcl<pre><code>build_username           = \"example\"\nbuild_password           = \"&lt;plaintext_password&gt;\"\nbuild_password_encrypted = \"&lt;sha512_encrypted_password&gt;\"\nbuild_key                = \"&lt;public_key&gt;\"\n</code></pre> <p>You can also override the <code>build_key</code> value with contents of a file.</p> config/build.pkrvars.hcl<pre><code>build_key = file(\"${path.root}/config/ssh/build_id_ecdsa.pub\")\n</code></pre> <p>Generate a SHA-512 encrypted password for the <code>build_password_encrypted</code> using tools like mkpasswd.</p>  \u00a0 VMware Photon OS \u00a0 Ubuntu \u00a0 macOS <p>Run the following command to generate a SHA-512 encrypted password for the <code>build_password_encrypted</code> using mkpasswd.</p> <pre><code>sudo systemctl start docker\nsudo docker run -it --rm alpine:latest\necho -n \"&lt;your_password&gt; | mkpasswd --stdin -m sha512\n</code></pre> <p>The following output is displayed:</p> <pre><code>Password:\n[your_password_hash]\n</code></pre> <p>Run the following command to generate a SHA-512 encrypted password for the <code>build_password_encrypted</code> using mkpasswd.</p> <pre><code>mkpasswd -m sha512\n</code></pre> <p>The following output is displayed:</p> <pre><code>Password: ***************\n[password hash]\n</code></pre> <p>Run the following command to generate a SHA-512 encrypted password for the <code>build_password_encrypted</code> using mkpasswd.</p> <pre><code>docker run -it --rm alpine:latest\nmkpasswd -m sha512\n</code></pre> <p>The following output is displayed:</p> <pre><code>Password: ***************\n[password hash]\n</code></pre> <p>Generate a public key for the <code>build_key</code> for public key authentication.</p>  \u00a0 VMware Photon OS \u00a0 Ubuntu \u00a0 macOS <p>Run the following command to generate a public key for the <code>build_key</code> for public key authentication.</p> <pre><code>ssh-keygen -t ecdsa -b 521 -C \"&lt;name@example.com&gt;\"\n</code></pre> <p>The following output is displayed:</p> <pre><code>Generating public/private ecdsa key pair.\nEnter file in which to save the key (/Users/example/.ssh/id_ecdsa):\nEnter passphrase (empty for no passphrase): **************\nEnter same passphrase again: **************\nYour identification has been saved in /Users/example/.ssh/id_ecdsa.\nYour public key has been saved in /Users/example/.ssh/id_ecdsa.pub.\n</code></pre> <p>Run the following command to generate a public key for the <code>build_key</code> for public key authentication.</p> <pre><code>ssh-keygen -t ecdsa -b 521 -C \"&lt;name@example.com&gt;\"\n</code></pre> <p>The following output is displayed:</p> <pre><code>Generating public/private ecdsa key pair.\nEnter file in which to save the key (/Users/example/.ssh/id_ecdsa):\nEnter passphrase (empty for no passphrase): **************\nEnter same passphrase again: **************\nYour identification has been saved in /Users/example/.ssh/id_ecdsa.\nYour public key has been saved in /Users/example/.ssh/id_ecdsa.pub.\n</code></pre> <p>Run the following command to generate a public key for the <code>build_key</code> for public key authentication.</p> <pre><code>ssh-keygen -t ecdsa -b 521 -C \"&lt;name@example.com&gt;\"\n</code></pre> <p>The following output is displayed:</p> <pre><code>Generating public/private ecdsa key pair.\nEnter file in which to save the key (/Users/example/.ssh/id_ecdsa):\nEnter passphrase (empty for no passphrase): **************\nEnter same passphrase again: **************\nYour identification has been saved in /Users/example/.ssh/id_ecdsa.\nYour public key has been saved in /Users/example/.ssh/id_ecdsa.pub.\n</code></pre> <p>The content of the public key, <code>build_key</code>, is added the key to the <code>~/.ssh/authorized_keys</code> file of the <code>build_username</code> on the Linux guest operating systems.</p> Example Public Keys and Passwords. <p>Replace the example public keys and passwords.</p> <pre><code>By default, both Public Key Authentication and Password Authentication are enabled for Linux\ndistributions.\n\nIf you wish to disable Password Authentication and only use Public Key Authentication, comment\nor remove the portion of the associated Ansible `configure` role.\n</code></pre>"},{"location":"getting-started/configuration/#ansible","title":"Ansible","text":"<p>Edit the <code>config/ansible.pkrvars.hcl</code> file to configure the credentials for the Ansible account on Linux machine images.</p> config/ansible.pkrvars.hcl<pre><code>ansible_username = \"ansible\"\nansible_key      = \"&lt;public_key&gt;\"\n</code></pre> Ansible User Password <p>A random password is auto-generated for the Ansible user.</p> <p>You can also override the <code>ansible_key</code> value with contents of a file, if required.</p> config/ansible.pkrvars.hcl<pre><code>ansible_key = file(\"${path.root}/config/ssh/ansible_id_ecdsa.pub\")\n</code></pre>"},{"location":"getting-started/configuration/#common","title":"Common","text":"<p>Edit the <code>config/common.pkrvars.hcl</code> file to configure the following common variables:</p> <ul> <li>Virtual Machine Settings</li> <li>Template and Content Library Settings</li> <li>OVF Export Settings</li> <li>Removable Media Settings</li> <li>Boot and Provisioning Settings</li> <li>HCP Packer Registry</li> </ul> config/common.pkrvars.hcl<pre><code>// Virtual Machine Settings\ncommon_vm_version           = 19\ncommon_tools_upgrade_policy = true\ncommon_remove_cdrom         = true\n\n// Template and Content Library Settings\ncommon_template_conversion     = false\ncommon_content_library         = \"sfo-w01-lib01\"\ncommon_content_library_enabled = true\ncommon_content_library_ovf     = true\ncommon_content_library_destroy = true\n\n// OVF Export Settings\ncommon_ovf_export_enabled   = false\ncommon_ovf_export_overwrite = true\n\n// Removable Media Settings\ncommon_iso_datastore = \"sfo-w01-cl01-ds-nfs01\"\n\n// Boot and Provisioning Settings\ncommon_data_source       = \"http\"\ncommon_http_ip           = null\ncommon_http_port_min     = 8000\ncommon_http_port_max     = 8099\ncommon_ip_wait_timeout   = \"20m\"\ncommon_ip_settle_timeout = \"5s\"\ncommon_shutdown_timeout  = \"15m\"\n\n// HCP Packer\ncommon_hcp_packer_registry_enabled = false\n</code></pre>"},{"location":"getting-started/configuration/#data-source","title":"Data Source","text":"<p>The default provisioning data source for Linux machine image builds is <code>http</code>. This is used to serve the kickstart files to the Linux guest operating system during the build.</p> config/common.pkrvars.hcl<pre><code>common_data_source = \"http\"\n</code></pre> IPTables <p>Packer includes a built-in HTTP server that is used to serve the kickstart files for Linux machine image builds.</p> <p>If iptables is enabled on your Packer host, you will need to open <code>common_http_port_min</code> through <code>common_http_port_max</code> ports.</p> <pre><code>iptables -A INPUT -p tcp --match multiport --dports 8000:8099 -j ACCEPT\n</code></pre> <p>You can change the <code>common_data_source</code> from <code>http</code> to <code>disk</code> to build supported Linux machine images without the need to use Packer's HTTP server. This is useful for environments that may not be able to route back to the system from which Packer is running. For example, building a machine image in VMware Cloud on AWS.</p> config/common.pkrvars.hcl<pre><code>common_data_source = \"disk\"\n</code></pre> <p>The Packer plugin's <code>cd_content</code> option is used when selecting <code>disk</code> unless the distribution does not support a secondary CD-ROM. For distributions that do not support a secondary CD-ROM the <code>floppy_content</code> option is used.</p>"},{"location":"getting-started/configuration/#http-binding","title":"HTTP Binding","text":"<p>If you need to define a specific IPv4 address from your host for Packer's built-in HTTP server, modify the <code>common_http_ip</code> variable from <code>null</code> to a <code>string</code> value that matches an IP address on your Packer host.</p> config/common.pkrvars.hcl<pre><code>common_http_ip = \"172.16.11.254\"\n</code></pre>"},{"location":"getting-started/configuration/#proxy","title":"Proxy","text":"<p>Edit the <code>config/proxy.pkrvars.hcl</code> file to configure the following:</p> <ul> <li>SOCKS proxy settings used for connecting to Linux machine images.</li> <li>Credentials for the proxy server.</li> </ul> config/proxy.pkrvars.hcl<pre><code>communicator_proxy_host     = \"proxy.example.com\"\ncommunicator_proxy_port     = 8080\ncommunicator_proxy_username = \"example\"\ncommunicator_proxy_password = \"&lt;plaintext_password&gt;\"\n</code></pre>"},{"location":"getting-started/configuration/#vmware-vsphere","title":"VMware vSphere","text":"<p>Edit the <code>builds/vsphere.pkrvars.hcl</code> file to configure the following:</p> <ul> <li>vSphere Endpoint and Credentials</li> <li>vSphere Settings</li> </ul> config/vsphere.pkrvars.hcl<pre><code>vsphere_endpoint                       = \"sfo-w01-vc01.sfo.example.com\"\nvsphere_username                       = \"svc-packer-vsphere@example.com\"\nvsphere_password                       = \"&lt;plaintext_password&gt;\"\nvsphere_insecure_connection            = true\nvsphere_datacenter                     = \"sfo-w01-dc01\"\nvsphere_cluster                        = \"sfo-w01-cl01\"\n//vsphere_host                         = \"sfo-w01-esx01\"\nvsphere_datastore                      = \"sfo-w01-cl01-ds-vsan01\"\nvsphere_network                        = \"sfo-w01-seg-dhcp\"\nvsphere_folder                         = \"sfo-w01-fd-templates\"\n//vsphere_resource_pool                = \"sfo-w01-rp01\"\nvsphere_set_host_for_datastore_uploads = false\n</code></pre> vSphere Distributed Resource Scheduler Disabled or Standalone ESXi Hosts <p>When targeting standalone ESXi hosts or vSphere clusters with vSphere DRS disabled, you must set the <code>vsphere_host</code> variable.</p> <pre><code>**Example** (vSphere Clusters with vSphere DRS Disabled):\n\n```hcl title=\"config/vsphere.pkrvars.hcl\"\n...\nvsphere_datacenter = \"sfo-w01-dc01\"\nvsphere_cluster    = \"sfo-w01-cl01\"\nvsphere_host       = \"sfo-w01-esx01\"\nvsphere_folder     = \"sfo-w01-fd-templates\"\n...\n```\n\n**Example** (Standalone ESXi Host Managed by vCenter Server):\n\nFor a standalone ESXi host, managed by vCenter Server, comment or remove `vsphere_cluster`.\n\n```hcl title=\"config/vsphere.pkrvars.hcl\"\n...\nvsphere_datacenter = \"sfo-w01-dc01\"\n//vsphere_cluster = \"sfo-w01-cl01\"\nvsphere_host = \"sfo-w01-esx01\"\nvsphere_folder = \"sfo-w01-fd-templates\"\nvsphere_datacenter = \"sfo-w01-dc01\"\n//vsphere_cluster = \"sfo-w01-cl01\"\nvsphere_host = \"sfo-w01-esx01\"\nvsphere_folder = \"sfo-w01-fd-templates\"\n```\n</code></pre>"},{"location":"getting-started/configuration/#machine-images","title":"Machine Images","text":"<p>Edit the <code>config/&lt;type&gt;-&lt;build&gt;-&lt;version&gt;.pkrvars.hcl</code> files to configure the following virtual machine hardware settings, as required:</p> <ul> <li>CPUs <code>(int)</code></li> <li>CPU Cores <code>(int)</code></li> <li>Memory in MB <code>(int)</code></li> <li>Primary Disk in MB <code>(int)</code></li> <li>.iso Path <code>(string)</code></li> <li>.iso File <code>(string)</code></li> </ul> config/linux-photon-5.pkrvars.hcl<pre><code>// Guest Operating System Metadata\nvm_guest_os_family  = \"linux\"\nvm_guest_os_name    = \"photon\"\nvm_guest_os_version = \"5.0\"\n\n// Virtual Machine Guest Operating System Setting\nvm_guest_os_type = \"vmwarePhoton64Guest\"\n\n// Virtual Machine Hardware Settings\nvm_firmware              = \"efi-secure\"\nvm_cdrom_type            = \"sata\"\nvm_cdrom_count           = 1\nvm_cpu_count             = 2\nvm_cpu_cores             = 1\nvm_cpu_hot_add           = false\nvm_mem_size              = 2048\nvm_mem_hot_add           = false\nvm_disk_size             = 40960\nvm_disk_controller_type  = [\"pvscsi\"]\nvm_disk_thin_provisioned = true\nvm_network_card          = \"vmxnet3\"\n\n// Removable Media Settings\niso_datastore_path       = \"iso/linux/photon\"\niso_content_library_item = \"photon-5.0-dde71ec57.x86_64\"\niso_file                 = \"photon-5.0-dde71ec57.x86_64.iso\"\n\n// Boot Settings\nvm_boot_order = \"disk,cdrom\"\nvm_boot_wait  = \"2s\"\n\n// Communicator Settings\ncommunicator_port    = 22\ncommunicator_timeout = \"30m\"\n</code></pre> Note <p>All <code>variables.auto.pkrvars.hcl</code> default to using:</p> <ul> <li>VMware Paravirtual SCSI controller storage device</li> <li>VMXNET 3 network card device</li> <li>EFI Secure Boot firmware</li> </ul>"},{"location":"getting-started/configuration/#linux-specific","title":"Linux Specific","text":""},{"location":"getting-started/configuration/#additional-packages","title":"Additional Packages","text":"<p>Edit the <code>config/linux-&lt;build&gt;-&lt;version&gt;.pkrvars.hcl</code> file to configure the additional packages to be installed on the Linux guest operating system during the build.</p> config/linux-photon-5.pkrvars.hcl<pre><code>// Additional Settings\nadditional_packages = [\"git\", \"make\", \"vim\"]\n</code></pre>"},{"location":"getting-started/configuration/#red-hat-subscription-manager","title":"Red Hat Subscription Manager","text":"<p>Edit the <code>config/redhat.pkrvars.hcl</code> file to configure the credentials for your Red Hat Subscription Manager account.</p> config/redhat.pkrvars.hcl<pre><code>rhsm_username = \"example\"\nrhsm_password = \"&lt;plaintext_password&gt;\"\n</code></pre> <p>These variables are only used if you are performing a Red Hat Enterprise Linux Server build and are used to register the image with Red Hat Subscription Manager during the build for system updates and package installation.</p> <p>Before the build completes, the machine image is unregistered from Red Hat Subscription Manager.</p>"},{"location":"getting-started/configuration/#suse-customer-connect","title":"SUSE Customer Connect","text":"<p>Edit the <code>config/scc.pkrvars.hcl</code> file to configure the following credentials for your SUSE Customer Connect account.</p> config/scc.pkrvars.hcl<pre><code>scc_email = \"suse@example.com\"\nscc_code  = \"&lt;plaintext_code&gt;\"\n</code></pre> <p>These variables are only used if you are performing a SUSE Linux Enterprise Server build and are used to register the image with SUSE Customer Connect during the build for system updates and package installation.</p> <p>Before the build completes, the machine image is unregistered from SUSE Customer Connect.</p>"},{"location":"getting-started/configuration/#network-customization","title":"Network Customization","text":"<p>Note</p> <p>Static IP assignment is available for certain Linux machine images.</p> <p>For details on which distributions are compatible, please refer to the Linux Distributions table.</p> <p>Edit the <code>config/network.pkrvars.hcl</code> file to configure a static IP address:</p> <ul> <li>IPv4 address, netmask, and gateway.</li> <li>DNS list.</li> </ul> <p>By default, the network is set to use DHCP for its configuration.</p> config/network.pkrvars.hcl<pre><code>vm_ip_address = \"172.16.100.192\"\nvm_ip_netmask = 24\nvm_ip_gateway = \"172.16.100.1\"\nvm_dns_list   = [ \"172.16.11.4\", \"172.16.11.5\" ]\n</code></pre>"},{"location":"getting-started/configuration/#storage-customization","title":"Storage Customization","text":"<p>Note</p> <p>Storage settings are available for certain Linux machine images.</p> <p>For details on which distributions are compatible, please refer to the Linux Distributions table.</p> <p>Edit the <code>config/linux-storage.pkrvars.hcl</code> file to configure a partitioning scheme:</p> <ul> <li>Disk device and whether to use a swap partition.</li> <li>Disk partitions and related settings.</li> <li>Logical volumes and related settings (optional).</li> </ul> config/linux-storage.pkrvars.hcl<pre><code>vm_disk_device = \"sda\"\nvm_disk_use_swap = false\nvm_disk_partitions = [\n  {\n    name = \"efi\"\n    size = 1024,\n    format = {\n      label  = \"EFIFS\",\n      fstype = \"fat32\",\n    },\n    mount = {\n      path    = \"/boot/efi\",\n      options = \"\",\n    },\n    volume_group = \"\",\n  },\n  {\n    name = \"boot\"\n    size = 1024,\n    format = {\n      label  = \"BOOTFS\",\n      fstype = \"xfs\",\n    },\n    mount = {\n      path    = \"/boot\",\n      options = \"\",\n    },\n    volume_group = \"\",\n  },\n  {\n    name = \"root\"\n    size = -1,\n    format = {\n      label  = \"ROOTFS\",\n      fstype = \"xfs\",\n    },\n    mount = {\n      path    = \"/\",\n      options = \"\",\n    },\n    volume_group = \"\",\n  },\n]\nvm_disk_lvm = []\n</code></pre> Note <p>Setting <code>size = -1</code> can also be used for the last partition (Logical Volume) of <code>vm_disk_lvm</code> so that it fills the remaining space of the Volume Group.</p>"},{"location":"getting-started/download/","title":"Download","text":"<p>You can choose between two options to get the source code:</p> <ol> <li>Download the latest release from GitHub.</li> <li>Clone the repository from GitHub.</li> </ol>  \u00a0 Download the Latest Release \u00a0 Clone the Repository <pre><code>TAG_NAME=$(curl -s https://api.github.com/repos/vmware-samples/packer-examples-for-vsphere/releases | jq  -r '.[0].tag_name')\nTARBALL_URL=$(curl -s https://api.github.com/repos/vmware-samples/packer-examples-for-vsphere/releases | jq  -r '.[0].tarball_url')\n\nmkdir packer-examples-for-vsphere\ncd packer-examples-for-vsphere\ncurl -sL $TARBALL_URL | tar xvfz - --strip-components 1\ngit init -b main\ngit add .\ngit commit -m \"chore: initial commit\"\ngit switch -c $TAG_NAME HEAD\n</code></pre> <pre><code>TAG_NAME=$(curl -s https://api.github.com/repos/vmware-samples/packer-examples-for-vsphere/releases | jq  -r '.[0].tag_name')\n\ngit clone https://github.com/vmware-samples/packer-examples-for-vsphere.git\ncd packer-examples-for-vsphere\ngit switch -c $TAG_NAME $TAG_NAME\n</code></pre> Prerelease Updates <p>You may also clone the <code>develop</code> branch for the latest prerelease updates.</p> Branches <p> A branch is mandatory since it is used for the build version and in the virtual machine name. It does not matter if it is based on the <code>HEAD</code> or a release tag.</p>"},{"location":"getting-started/download/#directory-structure","title":"Directory Structure","text":"<p>The directory structure of the project.</p> <pre><code>\u251c\u2500\u2500 build.sh\n\u251c\u2500\u2500 build.tmpl\n\u251c\u2500\u2500 build-ci.tmpl\n\u251c\u2500\u2500 build.yaml\n\u251c\u2500\u2500 CHANGELOG.md\n\u251c\u2500\u2500 CODE_OF_CONDUCT.md\n\u251c\u2500\u2500 config.sh\n\u251c\u2500\u2500 CONTRIBUTING.md\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 MAINTAINERS.md\n\u251c\u2500\u2500 NOTICE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 set-envvars.sh\n\u251c\u2500\u2500 ansible\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ansible.cfg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.yml\n\u2502   \u2514\u2500\u2500 roles\n\u2502       \u2514\u2500\u2500 &lt;role&gt;\n\u2502           \u2514\u2500\u2500 *.yml\n\u251c\u2500\u2500 artifacts\n\u251c\u2500\u2500 builds\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ansible.pkrvars.hcl.example\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build.pkrvars.hcl.example\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 common.pkrvars.hcl.example\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 proxy.pkrvars.hcl.example\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 rhsm.pkrvars.hcl.example\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 scc.pkrvars.hcl.example\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 vsphere.pkrvars.hcl.example\n\u2502   \u251c\u2500\u2500 linux\n\u2502   \u2502   \u2514\u2500\u2500 &lt;distribution&gt;\n\u2502   \u2502       \u2514\u2500\u2500 &lt;version&gt;\n\u2502   \u2502           \u251c\u2500\u2500 *.pkr.hcl\n\u2502   \u2502           \u251c\u2500\u2500 *.auto.pkrvars.hcl\n\u2502   \u2502           \u2514\u2500\u2500 data\n\u2502   \u2502               \u2514\u2500\u2500 ks.pkrtpl.hcl\n\u2502   \u2514\u2500\u2500 windows\n\u2502       \u2514\u2500\u2500 &lt;distribution&gt;\n\u2502           \u2514\u2500\u2500 &lt;version&gt;\n\u2502               \u251c\u2500\u2500 *.pkr.hcl\n\u2502               \u251c\u2500\u2500 *.auto.pkrvars.hcl\n\u2502               \u2514\u2500\u2500 data\n\u2502                   \u2514\u2500\u2500 autounattend.pkrtpl.hcl\n\u251c\u2500\u2500 manifests\n\u251c\u2500\u2500 scripts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 linux\n\u2502   \u2514\u2500\u2500 windows\n\u2502       \u2514\u2500\u2500 *.ps1\n\u2514\u2500\u2500 terraform\n    \u251c\u2500\u2500 vsphere-role\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 *.tf\n    \u2514\u2500\u2500 vsphere-virtual-machine\n        \u251c\u2500\u2500 example\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 *.tf\n        \u2514\u2500\u2500 ...\n            \u2514\u2500\u2500 *.tf\n</code></pre> <p>The following table describes the directory structure.</p> Directory Description <code>ansible</code> Contains the Ansible roles to prepare Linux machine image builds. <code>artifacts</code> Contains the OVF artifacts exported by the builds, if enabled. <code>builds</code> Contains the templates, variables, and configuration files for the machine image builds. <code>manifests</code> Manifests created after the completion of the machine image builds. <code>scripts</code> Contains the scripts to initialize and prepare Windows machine image builds. <code>terraform</code> Contains example Terraform plans to create a custom role and test machine image builds. Forking the Project <p>When forking the project for upstream contribution, please be mindful not to make changes that   may expose your sensitive information, such as passwords, keys, certificates, etc.</p>"},{"location":"getting-started/faq/","title":"Frequently Asked Questions","text":"<p>Note</p> <p>The section will be updated as questions are asked.</p>"},{"location":"getting-started/gitlab-ci-cd/","title":"GitLab CI/CD YAML","text":""},{"location":"getting-started/gitlab-ci-cd/#generate-a-cicd-yaml","title":"Generate a CI/CD YAML","text":"<p>The GitLab CI/CD YAML (<code>.gitlab-ci.yml</code>) can be generated with Gomplate using a template (<code>./build-ci.tmpl</code>) and a configuration file in YAML (<code>./build.yaml</code>).</p> <pre><code>gomplate -c build.yaml -f build-ci.tmpl -o .gitlab-ci.yml\n</code></pre> <p>or</p> <pre><code>make update-gitlab-ci\n</code></pre> Example <code>.gitlab-ci.yml</code> .gitlab-ci.yml<pre><code># Copyright 2023-2024 Broadcom. All rights reserved.\n# SPDX-License-Identifier: BSD-2\n\n##############################################################################\n##\n## Auto-generated .gitlab-ci.yml for building Packer Example for vSphere\n##\n## Do not modify this file directly, either:\n##\n##     - modify the source build.yaml\n##     - modify the template build-ci.tmpl\n##\n## then run the following command to re-create the .gitlab-ci.yml file:\n##\n##     gomplate -c build.yaml -f build-ci.tmpl -o .gitlab-ci.yml\n##\n##############################################################################\n\nvariables:\n    SCRIPT_PATH: \"${CI_PROJECT_DIR}\"\n    CONFIG_PATH: \"${CI_PROJECT_DIR}/config\"\n    INPUT_PATH: \"\"\n    BUILD_VARS: \"\"\n    EXTRA_VAR_FILES: \"\"\n    BUILD_ONLY: \"\"\n\n##############################################################################\n\n.packer-build:\n    stage: build\n    #tags:\n    #    - packer\n    before_script:\n        - \"packer init \\\"$INPUT_PATH\\\"\"\n        - \"packer validate -var-file=\\\"$CONFIG_PATH/vsphere.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/build.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/ansible.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/proxy.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/common.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/$BUILD_VARS\\\" ${EXTRA_VAR_FILES} \\\"$INPUT_PATH\\\"\"\n    script:\n        - \"packer build -force -on-error=ask -var-file=\\\"$CONFIG_PATH/vsphere.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/build.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/ansible.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/proxy.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/common.pkrvars.hcl\\\" -var-file=\\\"$CONFIG_PATH/$BUILD_VARS\\\" ${EXTRA_VAR_FILES} ${BUILD_ONLY} \\\"$INPUT_PATH\\\"\"\n    when: manual\n\n##############################################################################\n\nVMware-Photon-OS-5:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/photon/5/\"\n        BUILD_VARS: \"linux-photon-5.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl\"\n\n##############################################################################\n\nVMware-Photon-OS-4:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/photon/4/\"\n        BUILD_VARS: \"linux-photon-4.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl\"\n\n##############################################################################\n\nDebian-12:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/debian/12/\"\n        BUILD_VARS: \"linux-debian-12.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nDebian-11:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/debian/11/\"\n        BUILD_VARS: \"linux-debian-11.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nUbuntu-Server-23.10:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/ubuntu/23-10/\"\n        BUILD_VARS: \"linux-ubuntu-23-10.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nUbuntu-Server-22.04-LTS:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/ubuntu/22-04-lts/\"\n        BUILD_VARS: \"linux-ubuntu-22-04-lts.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nUbuntu-Server-20.04-LTS:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/ubuntu/20-04-lts/\"\n        BUILD_VARS: \"linux-ubuntu-20-04-lts.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nRed-Hat-Enterprise-Linux-9:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/rhel/9/\"\n        BUILD_VARS: \"linux-rhel-9.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl -var-file=$CONFIG_PATH/rhsm.pkrvars.hcl\"\n\n##############################################################################\n\nRed-Hat-Enterprise-Linux-8:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/rhel/8/\"\n        BUILD_VARS: \"linux-rhel-8.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl -var-file=$CONFIG_PATH/rhsm.pkrvars.hcl\"\n\n##############################################################################\n\nRed-Hat-Enterprise-Linux-7:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/rhel/7/\"\n        BUILD_VARS: \"linux-rhel-7.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl -var-file=$CONFIG_PATH/rhsm.pkrvars.hcl\"\n\n##############################################################################\n\nAlmaLinux-OS-9:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/almalinux/9/\"\n        BUILD_VARS: \"linux-almalinux-9.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nAlmaLinux-OS-8:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/almalinux/8/\"\n        BUILD_VARS: \"linux-almalinux-8.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nRocky-Linux-9:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/rocky/9/\"\n        BUILD_VARS: \"linux-rocky-9.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nRocky-Linux-8:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/rocky/8/\"\n        BUILD_VARS: \"linux-rocky-8.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nOracle-Linux-9:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/oracle/9/\"\n        BUILD_VARS: \"linux-oracle-9.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nOracle-Linux-8:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/oracle/8/\"\n        BUILD_VARS: \"linux-oracle-8.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nCentOS-Stream-9:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/centos/9-stream/\"\n        BUILD_VARS: \"linux-centos-9-stream.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nCentOS-Stream-8:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/centos/8-stream/\"\n        BUILD_VARS: \"linux-centos-8-stream.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nCentOS-Linux-7:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/centos/7/\"\n        BUILD_VARS: \"linux-centos-7.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/network.pkrvars.hcl -var-file=$CONFIG_PATH/linux-storage.pkrvars.hcl\"\n\n##############################################################################\n\nSUSE-Linux-Enterprise-Server-15:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/linux/sles/15/\"\n        BUILD_VARS: \"linux-sles-15.pkrvars.hcl\"\n        EXTRA_VAR_FILES: \"-var-file=$CONFIG_PATH/scc.pkrvars.hcl\"\n\n##############################################################################\n\nWindows-Server-2025-All:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/server/2025/\"\n        BUILD_VARS: \"windows-server-2025.pkrvars.hcl\"\n\n##############################################################################\n\nWindows-Server-2025-Standard-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/server/2025/\"\n        BUILD_VARS: \"windows-server-2025.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-server-standard-dexp,vsphere-iso.windows-server-standard-core\"\n\n##############################################################################\n\nWindows-Server-2025-Datacenter-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/server/2025/\"\n        BUILD_VARS: \"windows-server-2025.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-server-datacenter-dexp,vsphere-iso.windows-server-datacenter-core\"\n\n##############################################################################\n\nWindows-Server-2022-All:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/server/2022/\"\n        BUILD_VARS: \"windows-server-2022.pkrvars.hcl\"\n\n##############################################################################\n\nWindows-Server-2022-Standard-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/server/2022/\"\n        BUILD_VARS: \"windows-server-2022.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-server-standard-dexp,vsphere-iso.windows-server-standard-core\"\n\n##############################################################################\n\nWindows-Server-2022-Datacenter-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/server/2022/\"\n        BUILD_VARS: \"windows-server-2022.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-server-datacenter-dexp,vsphere-iso.windows-server-datacenter-core\"\n\n##############################################################################\n\nWindows-Server-2019-All:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/server/2019/\"\n        BUILD_VARS: \"windows-server-2019.pkrvars.hcl\"\n\n##############################################################################\n\nWindows-Server-2019-Standard-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/server/2019/\"\n        BUILD_VARS: \"windows-server-2019.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-server-standard-dexp,vsphere-iso.windows-server-standard-core\"\n\n##############################################################################\n\nWindows-Server-2019-Datacenter-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/server/2019/\"\n        BUILD_VARS: \"windows-server-2019.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-server-datacenter-dexp,vsphere-iso.windows-server-datacenter-core\"\n\n##############################################################################\n\nWindows-11-All:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/desktop/11/\"\n        BUILD_VARS: \"windows-desktop-11.pkrvars.hcl\"\n\n##############################################################################\n\nWindows-11-Enterprise-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/desktop/11/\"\n        BUILD_VARS: \"windows-desktop-11.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-desktop-ent\"\n\n##############################################################################\n\nWindows-11-Professional-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/desktop/11/\"\n        BUILD_VARS: \"windows-desktop-11.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-desktop-pro\"\n\n##############################################################################\n\nWindows-10-All:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/desktop/10/\"\n        BUILD_VARS: \"windows-desktop-10.pkrvars.hcl\"\n\n##############################################################################\n\nWindows-10-Enterprise-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/desktop/10/\"\n        BUILD_VARS: \"windows-desktop-10.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-desktop-ent\"\n\n##############################################################################\n\nWindows-10-Professional-Only:\n    extends: .packer-build\n    variables:\n        INPUT_PATH: \"$SCRIPT_PATH/builds/windows/desktop/10/\"\n        BUILD_VARS: \"windows-desktop-10.pkrvars.hcl\"\n        BUILD_ONLY: \"--only vsphere-iso.windows-desktop-pro\"\n\n##############################################################################\n</code></pre>"},{"location":"getting-started/iso/","title":"Guest Operating Systems","text":"<p>The project allows the use of a datastore (default) or a content library to store your guest operating system ISO files.</p>"},{"location":"getting-started/iso/#linux-distributions","title":"Linux Distributions","text":"<p>Download the Linux distribution ISO files from the publisher.</p> Operating System Version Download  \u00a0\u00a0 VMware Photon OS 5.0 <code>photon-5.0-xxxxxxxxx.x86_64.iso</code> 4.0 <code>photon-4.0-xxxxxxxxx.iso</code>  \u00a0\u00a0 Debian 12 <code>debian-12.x.x-amd64-netinst.iso</code> 11 <code>debian-11.x.x-amd64-netinst.iso</code>  \u00a0\u00a0 Ubuntu Server 23.10 <code>ubuntu-23.10-live-server-amd64.iso</code> 22.04 LTS <code>ubuntu-22.04.x-live-server-amd64.iso</code> 20.04 LTS <code>ubuntu-20.04.x-live-server-amd64.iso</code>  \u00a0\u00a0 Red Hat Enterprise Linux 9 <code>rhel-9.x-x86_64-dvd.iso</code> 8 <code>rhel-8.x-x86_64-dvd.iso</code> 7 <code>rhel-server-7.x-x86_64-dvd.iso</code>  \u00a0\u00a0 AlmaLinux OS 9 <code>AlmaLinux-9.x-x86_64-dvd.iso</code> 8 <code>AlmaLinux-8.x-x86_64-dvd.iso</code>  \u00a0\u00a0 Rocky Linux 9 <code>Rocky-9.x-x86_64-dvd.iso</code> 8 <code>Rocky-8.x-x86_64-dvd.iso</code>  \u00a0\u00a0 Oracle Linux 9 <code>OracleLinux-R9-U2-x86_64-dvd.iso</code> 8 <code>OracleLinux-R8-U8-x86_64-dvd.iso</code>  \u00a0\u00a0 CentOS 9 Stream <code>CentOS-Stream-9-latest-x86_64-dvd1.iso</code> 8 Stream <code>CentOS-Stream-8-x86_64-latest-dvd1.iso</code> 7 <code>CentOS-7-x86_64-DVD.iso</code>  \u00a0\u00a0 SUSE Linux Enterprise 15 <code>SLE-15-SPx-Full-x86_64-GM-Media1.iso</code>"},{"location":"getting-started/iso/#microsoft-windows","title":"Microsoft Windows","text":"<p>Download the Microsoft Windows ISO files from the Microsoft.</p> Operating System Version Download  \u00a0\u00a0 Microsoft Windows Server 2025  \u00a0 Windows Insiders Preview 2022  \u00a0 Windows Evaluation Center 2019  \u00a0 Windows Evaluation Center  \u00a0\u00a0 Microsoft Windows 11  \u00a0 Windows Evaluation Center 10  \u00a0 Windows Evaluation Center <p>Upload the guest operating system ISO files to the datastore and update the path in the configuration variables.</p>  \u00a0 Datastore (Default) \u00a0 Content Library config/common.pkrvars.hcl<pre><code>common_iso_datastore               = \"sfo-w01-cl01-ds-nfs01\"\ncommon_iso_content_library         = \"\"\ncommon_iso_content_library_enabled = false\n</code></pre> config/common.pkrvars.hcl<pre><code>common_iso_datastore               = \"\"\ncommon_iso_content_library         = \"sfo-w01-lib01\"\ncommon_iso_content_library_enabled = true\n</code></pre> <p>Update the ISO path and file for each guest operating system in the configuration variables.</p> builds/linux/photon/5/packer.auto.pkrvars.hcl<pre><code>iso_datastore_path       = \"iso/linux/photon\"\niso_content_library_item = \"photon-5.0-xxxxxxxxx\"\niso_file                 = \"photon-5.0-xxxxxxxxx.iso\"\n</code></pre>"},{"location":"getting-started/privileges/","title":"Service Account Privileges","text":"<p>Create a custom vSphere role with the required privileges to integrate HashiCorp Packer with VMware vSphere. A service account can be added to the role to ensure that Packer has least privilege access to the infrastructure.</p>"},{"location":"getting-started/privileges/#required-privileges","title":"Required Privileges","text":"<p> \u00a0 Clone the default Read-Only vSphere role and add the following privileges:</p> Category Privilege Reference Content Library Add library item <code>ContentLibrary.AddLibraryItem</code> Update Library Item <code>ContentLibrary.UpdateLibraryItem</code> Cryptographic Operations Direct Access  (Required for <code>packer_cache</code> upload.) <code>Cryptographer.Access</code> Encrypt  (Required for vTPM.) <code>Cryptographer.Encrypt</code> Datastore Allocate space <code>Datastore.AllocateSpace</code> Browse datastore <code>Datastore.Browse</code> Low level file operations <code>Datastore.FileManagement</code> Host Configuration &gt; System Management <code>Host.Config.SystemManagement</code> Network Assign network <code>Network.Assign</code> Resource Assign virtual machine to resource pool <code>Resource.AssignVMToPool</code> vApp Export <code>vApp.Export</code> Virtual Machine Configuration &gt; Add new disk <code>VirtualMachine.Config.AddNewDisk</code> Configuration &gt; Add or remove device <code>VirtualMachine.Config.AddRemoveDevice</code> Configuration &gt; Advanced configuration <code>VirtualMachine.Config.AdvancedConfig</code> Configuration &gt; Change CPU count <code>VirtualMachine.Config.CPUCount</code> Configuration &gt; Change memory <code>VirtualMachine.Config.Memory</code> Configuration &gt; Change settings <code>VirtualMachine.Config.Settings</code> Configuration &gt; Change Resource <code>VirtualMachine.Config.Resource</code> Configuration &gt; Modify device settings <code>VirtualMachine.Config.EditDevice</code> Configuration &gt; Set annotation <code>VirtualMachine.Config.Annotation</code> Edit Inventory &gt; Create from existing <code>VirtualMachine.Inventory.CreateFromExisting</code> Edit Inventory &gt; Create new <code>VirtualMachine.Inventory.Create</code> Edit Inventory &gt; Remove <code>VirtualMachine.Inventory.Delete</code> Interaction &gt; Configure CD media <code>VirtualMachine.Interact.SetCDMedia</code> Interaction &gt; Configure floppy media <code>VirtualMachine.Interact.SetFloppyMedia</code> Interaction &gt; Connect devices <code>VirtualMachine.Interact.DeviceConnection</code> Interaction &gt; Inject USB HID scan codes <code>VirtualMachine.Interact.PutUsbScanCodes</code> Interaction &gt; Power off <code>VirtualMachine.Interact.PowerOff</code> Interaction &gt; Power on <code>VirtualMachine.Interact.PowerOn</code> Provisioning &gt; Create template from virtual machine <code>VirtualMachine.Provisioning.CreateTemplateFromVM</code> Provisioning &gt; Mark as template <code>VirtualMachine.Provisioning.MarkAsTemplate</code> Provisioning &gt; Mark as virtual machine <code>VirtualMachine.Provisioning.MarkAsVM</code> State &gt; Create snapshot <code>VirtualMachine.State.CreateSnapshot</code> <p>Once the custom vSphere role is created, assign Global Permissions in vSphere for the service account that will be used for the HashiCorp Packer to VMware vSphere integration in the next step. Global permissions are required for the content library.</p> <p>For example:</p> <ol> <li> <p>Log in to the vCenter Server at <code>https://&lt;management_vcenter_server_fqdn&gt;/ui</code> as    <code>administrator@vsphere.local</code>.</p> </li> <li> <p>Select Menu &gt; Administration.</p> </li> <li> <p>Create service account in vSphere SSO if it does not exist: In the left pane, select Single    Sign On &gt; Users and Groups and click on Users, from the dropdown select the domain in    which you want to create the user (e.g.,<code>example.com</code>) and click ADD, fill all the username    (e.g., <code>svc-packer-vsphere)</code> and all required details, then click ADD to create the user.</p> </li> <li> <p>In the left pane, select Access control &gt; Global permissions and click the Add    permissions icon.</p> </li> <li> <p>In the Add permissions dialog box, enter the service account (e.g., <code>svc-packer-vsphere@example.com</code>), select the custom role (e.g., Packer to vSphere Integration    Role) and the Propagate to children checkbox, and click OK.</p> </li> </ol> <p>In an environment with many vCenter Server instances, such as management and workload domains, you may wish to further reduce the scope of access across the infrastructure in vSphere for the service account. For example, if you do not want Packer to have access to your management domain, but only allow access to workload domains:</p> <ol> <li> <p>From the Hosts and clusters inventory, select management domain vCenter Server to restrict    scope, and click the Permissions tab.</p> </li> <li> <p>Select the service account with the custom role assigned and click the Edit.</p> </li> <li> <p>In the Change role dialog box, from the Role drop-down menu, select No Access, select    the Propagate to children checkbox, and click OK.</p> </li> </ol>"},{"location":"getting-started/privileges/#terraform-example","title":"Terraform Example","text":"<p>If you would like to automate the creation of the custom vSphere role, a Terraform example is included in the project.</p> <ol> <li> <p>Navigate to the directory for the example.</p> <pre><code>cd terraform/vsphere-role\n</code></pre> </li> <li> <p>Duplicate the <code>terraform.tfvars.example</code> file to <code>terraform.tfvars</code> in the directory.</p> <pre><code>cp terraform.tfvars.example terraform.tfvars\n</code></pre> </li> <li> <p>Open the <code>terraform.tfvars</code> file and update the variables according to your environment.</p> </li> <li> <p>Initialize the current directory and the required Terraform provider for VMware vSphere.</p> <pre><code>terraform init\n</code></pre> </li> <li> <p>Create a Terraform plan and save the output to a file.</p> <pre><code>terraform plan -out=tfplan\n</code></pre> </li> <li> <p>Apply the Terraform plan.</p> <pre><code>terraform apply tfplan\n</code></pre> </li> </ol>"},{"location":"getting-started/requirements/","title":"Requirements","text":""},{"location":"getting-started/requirements/#platform","title":"Platform","text":"<p>The project is tested on the following platforms:</p> Platform Version VMware vSphere 8.0 or later 7.0 Update 3D or later"},{"location":"getting-started/requirements/#operating-systems","title":"Operating Systems","text":"<p>The project is tested on the following operating systems for the Packer host <sup>1</sup> :</p> Operating System Version Architecture  \u00a0\u00a0 VMware Photon OS 5.0 <code>x86_64</code>  \u00a0\u00a0 Ubuntu Server 22.04 LTS <code>x86_64</code>  \u00a0\u00a0 macOS Sonoma Intel or Apple Silicon"},{"location":"getting-started/requirements/#packer","title":"Packer","text":""},{"location":"getting-started/requirements/#packer-cli","title":"Packer CLI","text":"<p>HashiCorp Packer 1.10.0 or higher.</p>  \u00a0 VMware Photon OS \u00a0 Ubuntu \u00a0 macOS <p>You can install Packer on VMware Photon OS using the following commands:</p> <pre><code>PACKER_VERSION=\"1.10.0\"\nOS_PACKAGES=\"wget unzip\"\n\nif [[ $(uname -m) == \"x86_64\" ]]; then\n  LINUX_ARCH=\"amd64\"\nelif [[ $(uname -m) == \"aarch64\" ]]; then\n  LINUX_ARCH=\"arm64\"\nfi\n\ntdnf install ${OS_PACKAGES} -y\n\nwget -q https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_${LINUX_ARCH}.zip\n\nunzip -o -d /usr/local/bin/ packer_${PACKER_VERSION}_linux_${LINUX_ARCH}.zip\n</code></pre> <p>You must configure your system to trust that HashiCorp key for package authentication.</p> <ol> <li> <p>Configure the repository:</p> <pre><code>sudo bash -c 'wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor &gt; /usr/share/keyrings/hashicorp-archive-keyring.gpg'\n</code></pre> </li> <li> <p>Verify the fingerprint:</p> <pre><code>gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint\n</code></pre> <p>You can verify that the fingerprint matches the HashiCorp public key published on Security at HashiCorp.</p> </li> <li> <p>Add the official HashiCorp repository to your system:</p> <pre><code>sudo bash -c 'echo \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \\\nhttps://apt.releases.hashicorp.com $(lsb_release -cs) main\" &gt; /etc/apt/sources.list.d/hashicorp.list'\n</code></pre> </li> <li> <p>Install Packer from the HashiCorp repository:</p> <pre><code>sudo apt update &amp;&amp; sudo apt install packer\n</code></pre> </li> </ol> <p>You can install Packer on macOS using  Homebrew.</p> <pre><code>brew tap hashicorp/tap\n\nbrew install hashicorp/tap/packer\n</code></pre>"},{"location":"getting-started/requirements/#packer-plugins","title":"Packer Plugins","text":"<p>Required plugins are automatically downloaded and initialized when using <code>./build.sh</code>.</p> <p>For disconnected sites (e.g., air-gapped or dark sites), you may download the plugins and place these same directory as your Packer executable <code>/usr/local/bin</code> or <code>$HOME/.packer.d/plugins</code>.</p> Plugin Version Description Resources  \u00a0\u00a0 Packer Plugin for Ansible &gt;= 1.1.0 By HashiCorp  \u00a0\u00a0 Packer Plugin for VMware vSphere &gt;= 1.2.7 By HashiCorp  \u00a0\u00a0 Packer Plugin for Git &gt;= 0.6.2 Community Plugin"},{"location":"getting-started/requirements/#additional-software-packages","title":"Additional Software Packages","text":"<p>The following additional software packages must be installed on the operating system running Packer.</p>  \u00a0 VMware Photon OS \u00a0 Ubuntu \u00a0 macOS <ul> <li> <p>git command-line tools.</p> </li> <li> <p>ansible-core 2.15.</p> </li> <li> <p>jq - A command-line JSON processor.</p> </li> <li> <p>xorriso - A command-line ISO creator.</p> <pre><code>pip3 install --user ansible-core==2.15\nexport PATH=\"$HOME/.local/bin:$PATH\"\ntdnf -y install git jq xorriso\n</code></pre> </li> <li> <p>HashiCorp Terraform 1.7.1 or higher.</p> <pre><code>TERRAFORM_VERSION=\"1.7.1\"\nOS_PACKAGES=\"wget unzip\"\n\nif [[ $(uname -m) == \"x86_64\" ]]; then\n  LINUX_ARCH=\"amd64\"\nelif [[ $(uname -m) == \"aarch64\" ]]; then\n  LINUX_ARCH=\"arm64\"\nfi\n\ntdnf install ${OS_PACKAGES} -y\n\nwget -q https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_${LINUX_ARCH}.zip\n\nunzip -o -d /usr/local/bin/ terraform_${TERRAFORM_VERSION}_linux_${LINUX_ARCH}.zip\n</code></pre> </li> </ul> <ul> <li> <p>git command-line tools.</p> </li> <li> <p>ansible-core 2.15.</p> </li> <li> <p>jq - A command-line JSON processor.</p> </li> <li> <p>xorriso - A command-line ISO creator.</p> </li> <li> <p>mkpasswd - A password generating utility.</p> </li> <li> <p>HashiCorp Terraform 1.7.1 or higher.</p> <pre><code>pip3 install --user ansible-core==2.15\nsudo apt -y install git jq xorriso whois terraform\n</code></pre> </li> <li> <p>gomplate 3.11.7 or higher.</p> <pre><code>GOMPLATE_VERSION=\"3.11.7\"\nLINUX_ARCH=\"amd64\"\n\nsudo curl -o /usr/local/bin/gomplate -sSL https://github.com/hairyhenderson/gomplate/releases/download/v${GOMPLATE_VERSION}/gomplate_linux-${LINUX_ARCH}\nsudo chmod 755 /usr/local/bin/gomplate\n</code></pre> </li> </ul> <ul> <li>git command-line tools.</li> <li>ansible-core 2.15.</li> <li>jq - A command-line JSON processor.</li> <li>Coreutils</li> <li>HashiCorp Terraform 1.7.1 or higher.</li> <li> <p>gomplate 3.11.7 or higher.</p> <pre><code>pip3 install --user ansible-core==2.15\nbrew install git jq coreutils hashicorp/tap/terraform gomplate\n</code></pre> </li> <li> <p>mkpasswd - A password generating utility.</p> <pre><code>brew install --cask docker\n</code></pre> </li> </ul> <ol> <li> <p>The project may work on other operating systems and versions, but has not been tested by the maintainers.\u00a0\u21a9</p> </li> </ol>"}]}